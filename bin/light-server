#!/usr/bin/env node

/**
 * light-server
 *
 * Serve, watch, exucute commands and live-reload, all in one.
 *
 * Copyright (c) 2015 by Tianxiang Chen
 */

var LightServer = require('..')
var program = require('commander')

function main(argv) {

  function collect(val, memo) {
    memo.push(val)
    return memo
  }

  program.version(require('../package').version)
    .option('-s, --serve <directory>', 'serve the directory as static http')
    .option('-p, --port <port>', 'http server port, default 4000', parseInt)
    .option('-w, --watch <files to watch>', 'files to watch, in glob format, repeatable', collect, [])
    .option('-c, --cmd <command>', 'if watched files changed, trigger the command, repeatable', collect, [])
    .on('--help', function(){
       console.log('  Examples:')
       console.log('')
       console.log('    $ light-server -s . -p 7000')
       console.log('    $ light-server -s . -w "*.js" -w "src/**" -c "npm run build"')
       console.log('')
     })

  if (argv.length == 0) {
    process.argv.push('--help')
  }
  program.parse(process.argv)
  program.port = program.port || 4000

  // TODO: handle argument logic
  options = {}
  if (program.serve) {
    ls = new LightServer(program.serve, options)
    ls.start()
  }
}

main(process.argv.slice(2))
